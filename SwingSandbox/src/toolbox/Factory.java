package toolbox;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

public class Factory {

	static String PROPS_PARAM_DIRECTORY = "param.directory";
	static String PROPS_USER_HOME = "user.home";
	static String PROPS_DIRECTORY = (System.getProperty(PROPS_PARAM_DIRECTORY)!=null ? System.getProperty(PROPS_PARAM_DIRECTORY) : System.getProperty(PROPS_USER_HOME));
	static String PROPS_FILENAME = "toolbox.properties";
	static String PROPS_FILE_HEADER = "Generated by Toolbox";
	
	static Properties toolboxProperties = new Properties();
	
	static {
		loadProperties();
	}
	
	static public FileChooser getFileChooser() {
		
		FileChooser fc = new FileChooser();
		
		return fc;
		
	}
	
	static private void loadProperties() {
		try {
				System.out.println("Loading properties");
				toolboxProperties.load(new FileInputStream(PROPS_DIRECTORY + File.separator + PROPS_FILENAME));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

	static protected void saveProperties() {
		try {
			toolboxProperties.store(new FileOutputStream(PROPS_DIRECTORY + File.separator + PROPS_FILENAME), PROPS_FILE_HEADER);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	static protected String getToolPropertyValue(String key) {
		
		return toolboxProperties.getProperty(key);

	}

	static protected void setToolPropertyValue(String key, String value) {
		
		toolboxProperties.setProperty(key, value);
		saveProperties();
	}


}
